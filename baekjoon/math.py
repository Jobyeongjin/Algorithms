# 1. 손익분기점 🐳
# 문제 : A, B, C가 주어졌을 때, 손익분기점을 구하는 프로그램을 작성하시오.
#       A = 고정비용, B = 가변비용, C = 노트북 가격

a, b, c = map(int, input().split())

margin = c - b  # 순이익
if b >= c:  # 노마진이면 -1
    print('-1')
else:
    print(a // margin + 1)  # 손익분기는 순이익에서 고정비용을 뺀 값에 1대를 더 팔아야 함


# 2. 벌집 🐳
# 문제 : 숫자 N이 주어졌을 때, 벌집의 중앙 1에서 N번 방까지 최소 개수의 방을 지나서 갈 때 몇 개의 방을 지나가는지(시작과 끝을 포함하여)를 계산하는 프로그램을 작성하시오. 예를 들면, 13까지는 3개, 58까지는 5개를 지난다.

n = int(input())

house = 1  # 방 1부터 시작
cnt = 1  # 지나는 방의 개수
while n > house:
    house += 6 * cnt  # 6의 배수로 방(둘레) 개수 증가
    cnt += 1  # 카운팅

print(cnt)


# 3. 분수찾기 🐳🚨
# 문제 : 이와 같이 나열된 분수들을 1/1 → 1/2 → 2/1 → 3/1 → 2/2 → … 과 같은 지그재그 순서로 차례대로 1번, 2번, 3번, 4번, 5번, … 분수라고 하자.
#       X가 주어졌을 때, X번째 분수를 구하는 프로그램을 작성하시오.

n = int(input())

line = 1
while n > line:
    n -= line  # 라인 안에 위치 확인
    line += 1  # 몇 번째 라인인지

if line % 2 == 0:  # 짝수 라인이라면 분자는 위치 값 그대로 사용
    up = n
    down = line - n + 1
else:  # 홀수 라인은 분모를 위치 값 그대로 사용
    up = line - n + 1
    down = n

print(f'{up}/{down}')


# 4. 달팽이는 올라가고 싶다 🐳
# 문제 : 땅 위에 달팽이가 있다. 이 달팽이는 높이가 V미터인 나무 막대를 올라갈 것이다.
#       달팽이는 낮에 A미터 올라갈 수 있다. 하지만, 밤에 잠을 자는 동안 B미터 미끄러진다. 또, 정상에 올라간 후에는 미끄러지지 않는다.
#       달팽이가 나무 막대를 모두 올라가려면, 며칠이 걸리는지 구하는 프로그램을 작성하시오.


a, b, v = map(int, input().split())

goal = v - b  # 올라가야 하는 높이
going = a - b  # 하루에 올라가는 높이
if goal % going == 0:
    print(goal // going)
else:
    print(goal // going + 1)

# 시간초과 코드 😱
# a, b, v = map(int, input().split())

# day = 0
# height = 0
# while True:
#     day += 1
#     if a * day - b * (day - 1) >= v:
#         break

# print(day)


# 5. ACM 호텔 🚨
# 문제 :


# 6. 부녀회장이 될테야 🐳
# 문제 : 아파트에 비어있는 집은 없고 모든 거주민들이 이 계약 조건을 지키고 왔다고 가정했을 때, 주어지는 양의 정수 k와 n에 대해 k층에 n호에는 몇 명이 살고 있는지 출력하라. 단, 아파트에는 0층부터 있고 각층에는 1호부터 있으며, 0층의 i호에는 i명이 산다.
#       이 아파트에 거주를 하려면 조건이 있는데, “a층의 b호에 살려면 자신의 아래(a-1)층의 1호부터 b호까지 사람들의 수의 합만큼 사람들을 데려와 살아야 한다” 는 계약 조항을 꼭 지키고 들어와야 한다.

t = int(input())

for tc in range(t):
    k = int(input())  # 층수
    n = int(input())  # 호수

    # people 리스트에 1 ~ n까지 수
    people = [i for i in range(1, n + 1)]  # 0층

    for _ in range(k):
        for j in range(1, n):
            people[j] += people[j - 1]  # 아래층 인덱스 값 더하기

    print(people[-1])


# 7. 설탕 배달 🐳
# 문제 : 상근이가 설탕을 정확하게 N킬로그램 배달해야 할 때, 봉지 몇 개를 가져가면 되는지 그 수를 구하는 프로그램을 작성하시오.
#       봉지는 3킬로그램 봉지와 5킬로그램 봉지가 있다. 상근이가 배달하는 봉지의 최소 개수를 출력한다. 만약, 정확하게 N킬로그램을 만들 수 없다면 -1을 출력한다.

n = int(input())

if n % 5 == 0:  # 5로 나눠서 떨어지면 바로 출력
    print(n // 5)

else:
    cnt = 0
    while n > 0:  # 0이 될때까지 반복
        n -= 3  # 3씩 줄이면서
        cnt += 1  # 3킬로 1봉지 추가

        if n % 5 == 0:  # 5로 나눠서 떨어지면
            cnt += n // 5  # 3킬로 봉지에 5킬로 봉지 추가
            print(cnt)
            break
        elif n == 1 or n == 2:  # 설탕 봉지로 나눌 수 없을 때
            print(-1)
            break
        elif n == 0:  # 전부 3으로 나눠질 때
            print(cnt)
            break


# 8. 큰 수 A+B 🐳
# 문제 : 두 정수 A와 B를 입력받은 다음, A+B를 출력하는 프로그램을 작성하시오.

a, b = map(int, input().split())

print(a + b)
